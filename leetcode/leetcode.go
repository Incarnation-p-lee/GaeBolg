package main

import "os"
import "log"
import "runtime/pprof"

import pbms "./problems"

func main() {
	f, err := os.Create("cpu.prof")

	if err != nil {
		log.Printf("Failed to create cpu.prof\n")
	} else {
		pprof.StartCPUProfile(f)
		defer pprof.StopCPUProfile()
	}

	/* Easy */
	pbms.TwoSum()
	pbms.Reverse()
	pbms.LongestCommonPrefix()
	pbms.IsValid()
	pbms.MergeTwoLists()
	pbms.RemoveDuplicates()
	pbms.RemoveElement()
	pbms.StrStr()
	pbms.CountAndSay()
	pbms.MaxSubArray()
	pbms.LengthOfLastWord()
	pbms.PlusOne()
	pbms.AddBinary()
	pbms.MySqrt()
	pbms.ClimbStairs()
	pbms.DeleteDuplicates2()
	pbms.MergeSortedArray()
	pbms.IsSameTree()
	pbms.IsSymmetric()
	pbms.MaxDepth()
	pbms.LevelOrderBottom()
	pbms.SortedArrayToBST()
	pbms.IsBalanced()
	pbms.MinDepth()
	pbms.Generate()
	pbms.GetRow()
	pbms.MaxProfit()
	pbms.MaxProfit2()
	pbms.IsPalindrome()
	pbms.SingleNumber()
	pbms.MinStackSample()
	pbms.TwoSumSorted()
	pbms.ConvertToTitle()
	pbms.MajorityElement()
	pbms.TitleToNumber()
	pbms.TrailingZeroes()
	pbms.RotateArray()

	/* Medium */
	pbms.AddTwoNumbers()
	pbms.LengthOfLongestSubstring()
	pbms.LongestPalindrome()
	pbms.Convert()
	pbms.MyAtoi()
	pbms.ThreeSum()
	pbms.ThreeSumClosest()
	pbms.LetterCombination()
	pbms.FourSum()
	pbms.RemoveNthFromEnd()
	pbms.GenerateParenthesis()
	pbms.SwapPairs()
	pbms.Divide()
	pbms.NextPermutation()
	pbms.Search()
	pbms.SearchRange()
	pbms.SearchInsert()
	pbms.IsValidSudoku()
	pbms.CombinationSum()
	pbms.CombinationSum2()
	pbms.Multiply()
	pbms.Permute()
	pbms.PermuteUnique()
	pbms.Rotate()
	pbms.GroupAnagrams()
	pbms.MyPow()
	pbms.SpiralOrder()
	pbms.CanJump()
	pbms.Merge()
	pbms.GenerateMatrix()
	pbms.GetPermutation()
	pbms.RotateRight()
	pbms.UniquePaths()
	pbms.UniquePathsWithObstacles()
	pbms.MinPathSum()
	pbms.SimplifyPath()
	pbms.SetZeroes()
	pbms.SearchMatrix()
	pbms.SortColors()
	pbms.Combine()
	pbms.Subsets()
	pbms.Exist()
	pbms.RemoveDuplicates2()
	pbms.Search2()
	pbms.DeleteDuplicates()
	pbms.PartitionList()
	pbms.GrayCode()
	pbms.SubsetsWithDup()
	pbms.NumDecodings()
	pbms.ReverseBetween()
	pbms.RestoreIpAddresses()
	pbms.InorderTraversal()
	pbms.GenerateTrees()
	pbms.NumTrees()
	pbms.IsValidBST()
	pbms.LevelOrder()
	pbms.ZigzagLevelOrder()
	pbms.BuildTree()
	pbms.BuildTree2()
	pbms.SortedListToBST()
	pbms.HasPathSum()
	pbms.PathSum()
	pbms.Flatten()
	pbms.MinimumTotal()
	pbms.LadderLength()
	pbms.SumNumbers()
	pbms.Solve()
	pbms.Partition()
	pbms.CanCompleteCircuit()
	pbms.SingleNumber2()
	pbms.WordBreak()
	pbms.ReorderList()
	pbms.PreorderTraversal()
	pbms.InsertionSortList()
	pbms.SortList()
	pbms.EvalRPN()
	pbms.MaxProduct()
	pbms.FindMin()
	pbms.FindPeakElement()
	pbms.CompareVersion()
	pbms.FractionToDecimal()
	pbms.LargestNumber()
	pbms.FindRepeatedDnaSequences()

	/* Hard */
	pbms.FindMedianSortedArrays()
	pbms.MergeKLists()
	pbms.ReverseKGroup()
	pbms.LongestValidParentheses()
	pbms.FirstMissingPositive()
	pbms.Trap()
	pbms.Jump()
	pbms.Insert()
	pbms.IsNumber()
	pbms.MinDistance()
	pbms.MinWindow()
	pbms.LargestRectangleArea()
	pbms.MaximalRectangle()
	pbms.IsInterleave()
	pbms.RecoverTree()
	pbms.NumDistinct()
	pbms.MaxProfit3()
	pbms.MaxPathSum()
	pbms.FindLadders()
	pbms.LongestConsecutive()
	pbms.MinCut()
	pbms.Candy()
	pbms.WordBreak2()
	pbms.PostorderTraversal()
	pbms.LRUCacheSample()
	pbms.MaxPoints()
	pbms.FindMinDuplicated()
	pbms.MaximumGap()
	pbms.CalculateMinimumHP()
	pbms.MaxProfit4()
}

